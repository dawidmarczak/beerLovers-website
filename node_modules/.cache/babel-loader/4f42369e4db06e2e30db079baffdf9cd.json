{"ast":null,"code":"var _jsxFileName = \"/Users/dawid/Desktop/rekuratacja/rekrutacja/src/Components/HomePage.js\";\nimport React from 'react';\nimport { Grid, Header, Segment, Divider, Button } from 'semantic-ui-react';\nimport '../Styles/App.css';\nimport axios from 'axios';\nimport OneBeer from './OneBeer';\n\nclass HomePage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      beers: [],\n      iterator: 0,\n      pagesUsed: [],\n      successApi: false\n    };\n\n    this.componentDidMount = () => {\n      // Pobierając 10 elementów mozemy wyszukiwac piwa na 33 stronach (5 z ostatniej)\n      let page = Math.floor(Math.random() * 33 + 1);\n      let pages = this.state.pagesUsed;\n      pages.push(page);\n      axios.get('https://api.punkapi.com/v2/beers?per_page=10&page=' + page).then(response => {\n        this.setState({\n          beers: response.data,\n          pagesUsed: pages,\n          successApi: true\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.showMore = () => {\n      let founded = false;\n\n      do {\n        //Pobranie kolejnych elementów z innej strony\n        let newPage = Math.floor(Math.random() * 33 + 1).toString();\n        let pages = this.state.pagesUsed;\n\n        if (!pages.some(page => page == newPage)) {\n          founded = true;\n          pages.push(newPage);\n          axios.get('https://api.punkapi.com/v2/beers?per_page=10&page=' + newPage).then(response => {\n            let beersNow = this.state.beers;\n            let beersNew = response.data;\n            let newBeers = beersNow.concat(beersNew);\n            this.setState({\n              beers: newBeers,\n              iterator: 0,\n              pagesUsed: pages\n            });\n          }).catch(error => {});\n        }\n      } while (founded != true);\n    };\n\n    this.resetIterator = () => {\n      this.setState({\n        iterator: 0\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Segment, {\n      className: \"ml-1 transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"width40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Divider, {\n      horizontal: true,\n      className: \"white size-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Discover bears from all over the world\"))), this.state.successApi == true ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: \"4\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"up beerColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 32\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"up beerColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 34\n      }\n    }, \"Tagline\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"up beerColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 34\n      }\n    }, \"%\"))), /*#__PURE__*/React.createElement(Divider, {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 26\n      }\n    }), this.state.beers.map(beer => {\n      this.state.iterator++;\n      return /*#__PURE__*/React.createElement(OneBeer, {\n        resetIterator: this.resetIterator,\n        add: this.props.add,\n        remove: this.props.remove,\n        iterator: this.state.iterator,\n        beer: beer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 34\n        }\n      });\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"up white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 31\n      }\n    }, \"Click on name for more details or add to your favourites\"))), /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      className: \"width60p centerMargin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.showMore,\n      className: \"up buttonMore\",\n      color: \"yellow\",\n      basic: true,\n      circular: true,\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 30\n      }\n    }, \"Show more beers\")))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/dawid/Desktop/rekuratacja/rekrutacja/src/Components/HomePage.js"],"names":["React","Grid","Header","Segment","Divider","Button","axios","OneBeer","HomePage","Component","state","beers","iterator","pagesUsed","successApi","componentDidMount","page","Math","floor","random","pages","push","get","then","response","setState","data","catch","error","console","log","showMore","founded","newPage","toString","some","beersNow","beersNew","newBeers","concat","resetIterator","render","map","beer","props","add","remove"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid, Header, Segment, Divider, Button} from 'semantic-ui-react';\nimport '../Styles/App.css';\nimport axios from 'axios'\nimport OneBeer from './OneBeer'\n\nclass HomePage extends React.Component {\n\n    state = {beers: [], iterator: 0, pagesUsed: [], successApi: false}\n\n    componentDidMount = () => {\n\n        // Pobierając 10 elementów mozemy wyszukiwac piwa na 33 stronach (5 z ostatniej)\n        let page = Math.floor((Math.random() * 33) +1)\n        let pages = this.state.pagesUsed;\n        pages.push(page);\n        \n        axios.get('https://api.punkapi.com/v2/beers?per_page=10&page='+page)\n        .then(response => {\n\n            this.setState({\n                beers:response.data,\n                pagesUsed: pages,\n                successApi: true\n            })\n        })\n\n        .catch(error => {\n            console.log(error)\n        }) \n    }\n\n    showMore = () => {\n       \n        let founded = false;\n\n        do {\n        //Pobranie kolejnych elementów z innej strony\n        let newPage = Math.floor((Math.random() * 33) +1).toString();\n        let pages = this.state.pagesUsed;\n\n        if(!pages.some(page => page==newPage)) {\n\n        founded = true;\n        pages.push(newPage);\n\n        axios.get('https://api.punkapi.com/v2/beers?per_page=10&page='+newPage)\n        .then(response => {\n\n            let beersNow = this.state.beers;\n            let beersNew = response.data;\n            let newBeers = beersNow.concat(beersNew);\n\n            this.setState({\n                beers: newBeers,\n                iterator: 0,\n                pagesUsed:pages\n            })\n        })\n        .catch(error => {\n\n            \n\n        })  \n\n    }} while(founded!=true)\n\n}\n\n    resetIterator = () => {\n        this.setState({\n            iterator:0\n        })}\n\nrender() {\n    return (\n\n          <Segment className='ml-1 transparent'>\n\n            <Grid className='width40'>\n\n                <Grid.Row className='mt-2'>\n                    <Grid.Column textAlign='center'>\n                        <Divider horizontal className='white size-15'>Discover bears from all over the world</Divider>\n                   </Grid.Column>\n                 </Grid.Row>\n\n                {this.state.successApi == true ? (\n\n                    <>\n                        <Grid.Row columns='4' textAlign='center'>\n                            <Grid.Column width='6'>\n                               <Header className='up beerColor'>Name</Header> \n                             </Grid.Column>\n\n                             <Grid.Column width='6'>\n                                 <Header className='up beerColor'>Tagline</Header>\n                              </Grid.Column>\n\n                             <Grid.Column width='2'>\n                                 <Header className='up beerColor'>%</Header>\n                             </Grid.Column>\n                        </Grid.Row>\n\n                         <Divider className='mt-0'></Divider>\n\n                         {this.state.beers.map(beer => {\n                          this.state.iterator++;\n                          return <OneBeer resetIterator={this.resetIterator} add={this.props.add} remove={this.props.remove} iterator={this.state.iterator} beer={beer} />\n                         })}\n\n                          <Divider></Divider>\n\n                        <Grid.Row>\n                           <Grid.Column textAlign='center'>\n                              <Header className='up white'>Click on name for more details or add to your favourites</Header>\n                           </Grid.Column>\n                        </Grid.Row>\n\n                         <Grid.Row>\n                           <Grid.Column textAlign='center' className='width60p centerMargin'>\n                             <Button onClick={this.showMore} className='up buttonMore' color='yellow' basic circular fluid>Show more beers</Button>\n                                 </Grid.Column>\n                        </Grid.Row>\n\n                     </>\n\n                      ) : (\n                         <>\n                            \n\n                         </>\n                      )} \n\n                \n            </Grid>    \n          </Segment>\n    )\n}}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}