{"ast":null,"code":"var _jsxFileName = \"/Users/dawid/Desktop/rekuratacja/rekrutacja/src/Components/FavouritesPage.js\";\nimport React from 'react';\nimport { Grid, Header, Segment, Divider } from 'semantic-ui-react';\nimport '../Styles/App.css';\nimport OneBeer from './OneBeer';\nimport BeerLoader from '../Loaders/BeerLoader';\n\nclass FavouritesPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      iterator: 0,\n      loading: true\n    };\n\n    this.resetIterator = () => {\n      this.setState({\n        iterator: 0\n      });\n    };\n\n    this.componentDidMount = () => {\n      setTimeout(() => {\n        this.setState({\n          loading: false\n        });\n      }, 2000);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.loading == true ? /*#__PURE__*/React.createElement(BeerLoader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(Segment, {\n      className: \"width40 ml-1 transparent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      className: \"width40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      className: \"mt-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      horizontal: true,\n      className: \"white size-15 up\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \" Here are your favourites beers\"), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }))), this.props.empty == true ? /*#__PURE__*/React.createElement(Grid.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"beerColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 22\n      }\n    }, \"You didn't pick any favorite beer. Go to the home page and find your loved one!\"))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: \"4\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"up beerColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 32\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"up beerColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 34\n      }\n    }, \"Tagline\")), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      className: \"up beerColor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }\n    }, \"%\"))), /*#__PURE__*/React.createElement(Divider, {\n      className: \"mt-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }), this.props.favouritesBeers.map(beer => {\n      this.state.iterator++;\n      return /*#__PURE__*/React.createElement(OneBeer, {\n        resetIterator: this.resetIterator,\n        remove: this.props.remove,\n        iterator: this.state.iterator,\n        beer: beer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 28\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }\n    }))));\n  }\n\n}\n\nexport default FavouritesPage;","map":{"version":3,"sources":["/Users/dawid/Desktop/rekuratacja/rekrutacja/src/Components/FavouritesPage.js"],"names":["React","Grid","Header","Segment","Divider","OneBeer","BeerLoader","FavouritesPage","Component","state","iterator","loading","resetIterator","setState","componentDidMount","setTimeout","render","props","empty","favouritesBeers","map","beer","remove"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Grid, Header, Segment, Divider} from 'semantic-ui-react';\nimport '../Styles/App.css';\nimport OneBeer from './OneBeer'\nimport BeerLoader from '../Loaders/BeerLoader'\n\nclass FavouritesPage extends React.Component {\n\n    state = {iterator: 0, loading: true}\n\n    resetIterator = () => {\n        this.setState({\n            iterator:0\n        })\n    }\n\n    componentDidMount = () => {\n\n        setTimeout(()=> {\n            this.setState({\n                loading: false\n            })\n        },2000)\n    }\n\nrender() {\n    return (\n\n        <>\n            {this.state.loading == true ? (\n\n                    <BeerLoader />\n            ) : (\n        \n          <Segment className='width40 ml-1 transparent'>\n              \n                <Grid className='width40'>\n\n                <Grid.Row className='mt-1'>\n                    <Grid.Column textAlign='center'>\n                        <Header horizontal className='white size-15 up'> Here are your favourites beers</Header>\n                        <Divider></Divider>\n                   </Grid.Column>\n                 </Grid.Row>\n\n\n              {this.props.empty == true ? (\n             \n            <Grid.Row>\n                <Grid.Column textAlign='center'>\n                     <Header className='beerColor'>You didn't pick any favorite beer. Go to the home page and find your loved one!</Header>\n                 </Grid.Column>\n            </Grid.Row>\n\n              ): (\n\n                <>\n               <Grid.Row columns='4' textAlign='center'>\n                            <Grid.Column width='6'>\n                               <Header className='up beerColor'>Name</Header> \n                             </Grid.Column>\n\n                             <Grid.Column width='6'>\n                                 <Header className='up beerColor'>Tagline</Header>\n                              </Grid.Column>\n\n                             <Grid.Column width='2'>\n                                 <Header className='up beerColor'>%</Header>\n                             </Grid.Column>\n                        </Grid.Row>\n                <Divider className='mt-0'></Divider>\n\n                {this.props.favouritesBeers.map(beer => {\n                    this.state.iterator++;\n                    return <OneBeer resetIterator={this.resetIterator} remove={this.props.remove} iterator={this.state.iterator} beer={beer} />\n                 })}\n\n                 </>\n              )}\n\n                 <Divider></Divider>  \n            </Grid>  \n          </Segment>\n          )}\n        </>\n    )\n}}\n\nexport default FavouritesPage;\n"]},"metadata":{},"sourceType":"module"}